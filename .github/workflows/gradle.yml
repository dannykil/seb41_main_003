# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - 'dev'
    path:
      - 'server/**'

permissions:
  contents: read

env:
  S3_BUCKET_NAME: sseuengnim

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
    # Github Repository Secrets를 통해 환경 변수 파일을 생성한다.
      - name: Generate Environment Variables File for Production
        run: |
          echo "WEBHOOK_URL: $WEBHOOK_URL" >> ./src/main/resources/env.yml
          echo "AWS_S3_ACCESS_KEY: $AWS_S3_ACCESS_KEY" >> ./src/main/resources/env.yml
          echo "AWS_S3_SECRET_KEY: $AWS_S3_SECRET_KEY" >> ./src/main/resources/env.yml
          echo "JWT_SECRET_KEY: $JWT_SECRET_KEY" >> ./src/main/resources/env.yml
          echo "GOOGLE_OAUTH2_MAIN_ID: $GOOGLE_OAUTH2_MAIN_ID" >> ./src/main/resources/env.yml
          echo "GOOGLE_OAUTH2_MAINPROJECT_SECRETKEY: $GOOGLE_OAUTH2_MAINPROJECT_SECRETKEY" >> ./src/main/resources/env.yml
          echo "KAKAO_OAUTH2_MAIN_ID: $KAKAO_OAUTH2_MAIN_ID" >> ./src/main/resources/env.yml
          echo "KAKAO_OAUTH2_MAINPROJECT_SECRETKEY: $KAKAO_OAUTH2_MAINPROJECT_SECRETKEY" >> ./src/main/resources/env.yml
          echo "MAIN_DB_URL: $MAIN_DB_URL" >> ./src/main/resources/env.yml
          echo "MAIN_DB_ID: $MAIN_DB_ID" >> ./src/main/resources/env.yml
          echo "MAIN_DB_PW: $MAIN_DB_PW" >> ./src/main/resources/env.yml
          echo "AWS_ELASTICACHE_END_POINT: $AWS_ELASTICACHE_END_POINT" >> ./src/main/resources/env.yml

        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          GOOGLE_OAUTH2_MAIN_ID: ${{ secrets.GOOGLE_OAUTH2_MAIN_ID }}
          GOOGLE_OAUTH2_MAINPROJECT_SECRETKEY: ${{ secrets.GOOGLE_OAUTH2_MAINPROJECT_SECRETKEY }}
          KAKAO_OAUTH2_MAIN_ID: ${{ secrets.KAKAO_OAUTH2_MAIN_ID }}
          KAKAO_OAUTH2_MAINPROJECT_SECRETKEY: ${{ secrets.KAKAO_OAUTH2_MAINPROJECT_SECRETKEY }}
          MAIN_DB_URL: ${{ secrets.MAIN_DB_URL }}
          MAIN_DB_ID: ${{ secrets.MAIN_DB_ID }}
          MAIN_DB_PW: ${{ secrets.MAIN_DB_PW }}
          AWS_ELASTICACHE_END_POINT: ${{ secrets.AWS_ELASTICACHE_END_POINT }}


      - name: Run chmod to make gradlew executable
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build with Gradle
        run : ./gradlew build

      # build 후 프로젝트를 압축한다
      - name: Make zip file
        run: zip -r ./sseuengnim-deploy.zip .
        shell: bash

      # Access Key와 Secret Access Key를 통해 권한 확인
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret.
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret.
          aws-region: ap-northeast-2

      # 압축한 프로젝트를 S3로 전송.
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./sseuengnim-deploy.zip s3://$S3_BUCKET_NAME/sseuengnim-deploy.zip

      # CodeDeploy 배포.
      - name: Code Deploy
        run: >
          aws deploy create-deployment --application-name sseuengnim
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name sseuengnim-project
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=sseuengnim-deploy.zip
